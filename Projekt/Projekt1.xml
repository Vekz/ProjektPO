<?xml version="1.0"?>
<doc>
    <assembly>
        <name>Projekt1</name>
    </assembly>
    <members>
        <member name="T:Projekt1.TooManyException">
            <summary>
            Wyjątek wyrzucany w momencie gdy wartość podana powodu odjęcie za dużej wartości
            </summary>
        </member>
        <member name="T:Projekt1.Autor">
            <summary>
            Klasa autorów wydawnictwa.
            </summary>
            <remarks>
            Klasa przechowuje imię i nazwisko autora.
            </remarks>
        </member>
        <member name="T:Projekt1.DrukarniaAlbumow">
            <summary>
            Klasa drukarni albumów
            </summary>
        </member>
        <member name="T:Projekt1.Drukarnia">
            <summary>
            Klasa drukarni
            </summary>
        </member>
        <member name="T:Projekt1.DzialDruku">
            <summary>
            Dział obsługujący drukarnie i druk
            </summary>
        </member>
        <member name="M:Projekt1.DzialDruku.#ctor">
            <summary>
            Tworzy dział druku zawierający 3 drukarnie - 2 zwyczajne i 1 drukarnię albumów
            </summary>
        </member>
        <member name="M:Projekt1.DzialDruku.ZlecenieDruku(Projekt1.Produkt)">
            <summary>
            Wywoływane przez ZlecenieDruku w Dziale Handlowym <see cref="M:Projekt1.DzialHandlowy.ZlecenieDruku(Projekt1.Produkt,System.Int32)"/>
            Na podstawie typu produktu dokonywana jest ocena czy produkt zostanie wydrukowany
            </summary>
            <param name="a"> Produkt przekazany do druku </param>
            <returns> True - jeśli produkt może zostać wydrukowany (jest drukarnia która obsłuży dany typ produktu) </returns>
        </member>
        <member name="T:Projekt1.Album">
            <summary>
            Klasa Albumu, dziedziczy z Książki
            </summary>
        </member>
        <member name="T:Projekt1.Czasopismo">
            <summary>
            Klasa 'rodzic' dla każdego rodzaju czasopisma, które są dzielone na numery i nie posiadają autora
            </summary>
        </member>
        <member name="M:Projekt1.Czasopismo.#ctor(System.String,System.Int32,System.Double,System.String)">
            <summary>
            Tworzy obiekt czasopisma
            </summary>
            <param name="tytul"> Tytuł czasopisma </param>
            <param name="ilosc"> Stan magazynowy </param>
            <param name="cena"> Cena </param>
            <param name="numer"> Numer czasopisma </param>
        </member>
        <member name="T:Projekt1.DzialHandlowy">
            <summary>
            Dział zajmujący się zlecaniem sprzedaży i druku, przetrzymuje listę produktów
            </summary>
        </member>
        <member name="M:Projekt1.DzialHandlowy.#ctor(Projekt1.Wydawnictwo)">
            <summary>
            Tworzy obiekt Działu Handlowego
            </summary>
            <param name="Wyd"> Obiekt rodzica - Wydawnictwa <see cref="T:Projekt1.Wydawnictwo"/>, aby mieć dostęp do metod innych działów </param>
        </member>
        <member name="M:Projekt1.DzialHandlowy.ZlecenieZakupu(Projekt1.Produkt,System.Int32)">
            <summary>
            Zleca zakup produktu wybranego z listy, odejmuje podaną ilość od stanu magazynowego produktu
            </summary>
            <param name="P"> Produkt zamawiany </param>
            <param name="ilosc"> Ilość produktów do usunięcia ze stanu magazynowego </param>
            <exception cref="T:Projekt1.TooManyException"> Wyrzucone gdy drugi parametr jest większy od stanu magazynowego produktu </exception>
        </member>
        <member name="M:Projekt1.DzialHandlowy.ZlecenieDruku(Projekt1.Produkt,System.Int32)">
            <summary>
            Zleca druk produktu wybranego z listy, dodaje podaną ilość do stanu magazynowego produktu
            </summary>
            <param name="P"> Produkt drukowany </param>
            <param name="ilosc"> Ilość produktów do dodania do stanu magazynowego </param>
        </member>
        <member name="M:Projekt1.DzialHandlowy.PokazKatalogProduktów">
            <summary>
            Tworzy string zawierający katalog produktów [NIE UŻYWANE W GRAFICZNEJ WERSJI PROGRAMU]
            </summary>
            <returns> String z opisem całej listy produktów </returns>
        </member>
        <member name="T:Projekt1.Ksiazka">
            <summary>
            Klasa 'rodzic' dla wszystkich rodzajów ksiażek i tomów posiadających autora
            </summary>
        </member>
        <member name="M:Projekt1.Ksiazka.#ctor(Projekt1.Autor,System.String,System.Int32,System.Int32,System.Double)">
            <summary>
            Tworzy obiekt książki
            </summary>
            <param name="autor"> Autor dzieła </param>
            <param name="tytul"> Tytuł dzieła </param>
            <param name="rok"> Rok wydania </param>
            <param name="ilosc"> Stan magazynowy </param>
            <param name="cena"> Cena </param>
        </member>
        <member name="T:Projekt1.Miesiecznik">
            <summary>
            Klasa Miesięcznika, dziedziczy z Czasopisma
            </summary>
        </member>
        <member name="T:Projekt1.Produkt">
            <summary>
            Klasa abstrakcyjna będąca rodzicem dla każdego typu produktu znajdującego się w Wydawnictwie
            </summary>
        </member>
        <member name="M:Projekt1.Produkt.#ctor(System.String,System.Int32,System.Double)">
            <summary>
            Tworzy obiekt produktu z określonym tytułem, stanem magazynowym i ceną, używane w konstruktorach klas dziedziczących
            </summary>
            <param name="tytul"> Tytuł produktu </param>
            <param name="ilosc"> Stan magazynowy produktu </param>
            <param name="cena"> Cena produktu </param>
        </member>
        <member name="T:Projekt1.Romans">
            <summary>
            Klasa Romansu, dziedziczy z Książki
            </summary>
        </member>
        <member name="T:Projekt1.Tygodnik">
            <summary>
            Klasa Tygodnika, dziedziczy z Czasopisma
            </summary>
        </member>
        <member name="T:Projekt1.DzialProgramowy">
            <summary>
            Klasa działu programowego zajmującego się zawieraniem umów oraz autorami.
            </summary>
            <remarks>
            Zawiera metody do zarządzania autorami oraz ich umowami. Przechowuje listę autorów i umów.
            </remarks>
        </member>
        <member name="M:Projekt1.DzialProgramowy.UsunAutora(Projekt1.Autor)">
            <summary>
            Metoda usuwająca autora z listy.
            </summary>
            <param name="a">Autor, który ma zostać usunięty z listy.</param>
        </member>
        <member name="M:Projekt1.DzialProgramowy.DodajAutora(Projekt1.Autor)">
            <summary>
            Metoda dodająca autora do listy.
            </summary>
            <param name="a">Autor, który ma zostać dodany do listy.</param>
        </member>
        <member name="M:Projekt1.DzialProgramowy.PrzegladAutorow">
            <summary>
            Metoda tworząca spis wszystkich autorów wydawnictwa.
            </summary>
            <returns>
            Spis imion i nazwisk wszystkich autorów wydawnictwa.
            </returns>
        </member>
        <member name="M:Projekt1.DzialProgramowy.ZawrzyjUmoweUOD(Projekt1.UOD)">
            <summary>
            Metoda dodająca do listy umów umowę o dzieło.
            </summary>
            <param name="uod">Obiekt umowy o dzieło.</param>
        </member>
        <member name="M:Projekt1.DzialProgramowy.ZawrzyjUmoweUOP(Projekt1.UOP)">
            <summary>
            Metoda dodająca do listy umów umowę o pracę.
            </summary>
            <param name="uop">Obiekt umowy o pracę.</param>
        </member>
        <member name="M:Projekt1.DzialProgramowy.RozwiazUmowe(Projekt1.Umowa)">
            <summary>
            Metoda usuwająca z listy umowę.
            </summary>
            <param name="u">Obiekt umowy do usunięcia.</param>
        </member>
        <member name="M:Projekt1.DzialProgramowy.PrzegladUmow">
            <summary>
            Metoda tworząca spis zawartych umów.
            </summary>
            <returns>
            W przypadku umowy o pracę - pensja oraz czas, na który została zawarta umowa. W przypadku umowy o dzieło - pensja oraz pozycja, na którą została zawarta umowa.
            </returns>
        </member>
        <member name="T:Projekt1.Umowa">
            <summary>
            Klasa umów zawartych z autorami.
            </summary>
            <remarks>
            Klasa przechowuje obiekt autora, z którym zawarta jest umowa.
            </remarks>
        </member>
        <member name="T:Projekt1.UOD">
            <summary>
            Klasa umów o dzieło zawartych z autorami.
            </summary>
            <remarks>
            Klasa przechowuje obiekt książki, na którą autor ma umowę oraz jego pensję. Dziedziczy z umowy.
            </remarks>
        </member>
        <member name="T:Projekt1.UOP">
            <summary>
            Klasa zawierająca umowy o pracę zawarte z autorami.
            </summary>
            <remarks>
            Klasa przechowuje pensję autora oraz czas, na który ma zawartą umowę. Zawiera metodę do zlecania autorowi napisania konkretnej pozycji. Dziedziczy z umowy.
            </remarks>
        </member>
        <member name="M:Projekt1.UOP.Zlecenie(Projekt1.Ksiazka)">
            <summary>
            Metoda za pomocą której można zlecić autorowi zatrudnionego na umowę o pracę napisanie konkretnej pozycji.
            </summary>
            <param name="k">Książka, która została zlecona autorowi.</param>
        </member>
        <member name="T:Projekt1.Wydawnictwo">
            <summary>
             Głowny obiekt Wydawnictwa, zawierający w sobie wszystkie działy i ich funkcjonalności
            </summary>
        </member>
        <member name="M:Projekt1.Wydawnictwo.Inicjalizacja">
            <summary>
            Funkcja służąca do przypisania nowych działów do Wydawnictwa
            </summary>
        </member>
        <member name="T:Projekt1.App">
            <summary>
            App
            </summary>
        </member>
        <member name="M:Projekt1.App.InitializeComponent">
            <summary>
            InitializeComponent
            </summary>
        </member>
        <member name="M:Projekt1.App.Main">
            <summary>
            Application Entry Point.
            </summary>
        </member>
        <member name="T:Projekt1.MainWindow">
            <summary>
            Logika interfejsu i użycie funkcjonalności Wydawnictwa za pomocą interfejsu
            </summary>
            <summary>
            MainWindow
            </summary>
        </member>
        <member name="M:Projekt1.MainWindow.#ctor">
            <summary>
            Konstruktor głównego okna programu, incicjuje interfejs oraz Wydawnictwo <see cref="M:Projekt1.Wydawnictwo.Inicjalizacja"/> i przypisuje ComboBoxy <see cref="M:Projekt1.MainWindow.Inicjuj"/>
            </summary>
        </member>
        <member name="M:Projekt1.MainWindow.Inicjuj">
            <summary>
            Przypisuje ComboBoxom odpowiadające listy z działów Wydawnictwa
            </summary>
        </member>
        <member name="M:Projekt1.MainWindow.Zamawianie_Click(System.Object,System.Windows.RoutedEventArgs)">
            <summary>
            Wywołuje funkcję ZlecenieZakupu <see cref="M:Projekt1.DzialHandlowy.ZlecenieZakupu(Projekt1.Produkt,System.Int32)"/> wcześniej sprawdzając wprowadzone dane
            </summary>
        </member>
        <member name="M:Projekt1.MainWindow.Drukowanie_Click(System.Object,System.Windows.RoutedEventArgs)">
            <summary>
            Wywołuje funkcję ZlecenieDruku <see cref="M:Projekt1.DzialHandlowy.ZlecenieDruku(Projekt1.Produkt,System.Int32)"/> wcześniej sprawdzając wprowadzone dane
            </summary>
        </member>
        <member name="M:Projekt1.MainWindow.Usuwanie_a_Click(System.Object,System.Windows.RoutedEventArgs)">
            <summary>
            Usuwa autora z listy autorów Wydawnictwa, znajdującej się w Dziale Programowym <see cref="M:Projekt1.DzialProgramowy.UsunAutora(Projekt1.Autor)"/>
            </summary>
        </member>
        <member name="M:Projekt1.MainWindow.Rozwiązywanie_a_Click(System.Object,System.Windows.RoutedEventArgs)">
            <summary>
            Rozwiązuje umowę z autorem, usuwając ją z listy znajdującej się w Dziale Programowym <see cref="M:Projekt1.DzialProgramowy.RozwiazUmowe(Projekt1.Umowa)"/>
            </summary>
        </member>
        <member name="M:Projekt1.MainWindow.SprawdzanieInputu(System.Object,System.Windows.Input.TextCompositionEventArgs)">
            <summary>
            Sprawdza czy dane wprowadzane pasują do podanego w funkcji Regexa (Należą do liczb 0-9)
            </summary>
        </member>
        <member name="M:Projekt1.MainWindow.Dodawanie_a_Click(System.Object,System.Windows.RoutedEventArgs)">
            <summary>
            Sprawdza dane wprowadzone do formularza i dodaje autora do listy Działu Programowego <see cref="M:Projekt1.DzialProgramowy.DodajAutora(Projekt1.Autor)"/>
            </summary>
        </member>
        <member name="M:Projekt1.MainWindow.Dodawanie_k_Click(System.Object,System.Windows.RoutedEventArgs)">
            <summary>
            Sprawdza dane wprowadzone do forumlarza i dodaje produkt do listy Działu Handlowego <see cref="M:Projekt1.DzialHandlowy.ZlecenieDruku(Projekt1.Produkt,System.Int32)"/>
            </summary>
        </member>
        <member name="M:Projekt1.MainWindow.TextBox_GotFocus(System.Object,System.Windows.RoutedEventArgs)">
            <summary>
            W momencie gdy pole tekstowe łapie focus jest czyszczone aby użytkownik nie musiał usuwać ręcznie zawartego "placeholder'a"
            </summary>
        </member>
        <member name="M:Projekt1.MainWindow.O_prace_Click(System.Object,System.Windows.RoutedEventArgs)">
            <summary>
            Dodaje umowę o pracę do listy w Dziale Programowym <see cref="M:Projekt1.DzialProgramowy.ZawrzyjUmoweUOP(Projekt1.UOP)"/>
            </summary>
        </member>
        <member name="M:Projekt1.MainWindow.O_dzielo_Click(System.Object,System.Windows.RoutedEventArgs)">
            <summary>
            Dodaje umowę o dzieło do listy w Dziale Programowym <see cref="M:Projekt1.DzialProgramowy.ZawrzyjUmoweUOD(Projekt1.UOD)"/> jednocześnie zlecając utworzenie nowego dzieła <see cref="M:Projekt1.DzialHandlowy.ZlecenieDruku(Projekt1.Produkt,System.Int32)"/>
            </summary>
        </member>
        <member name="M:Projekt1.MainWindow.Zapisz(System.Object,System.Windows.RoutedEventArgs)">
            <summary>
            Używając mechanizmu serializacji zapisuje drzewo obiektów do pliku
            </summary>
        </member>
        <member name="M:Projekt1.MainWindow.Wczytaj(System.Object,System.Windows.RoutedEventArgs)">
            <summary>
            Używając mechanizmu deserializacji odczytuje drzewo obiektów z pliku
            </summary>
        </member>
        <member name="M:Projekt1.MainWindow.O_prace_p_Click(System.Object,System.Windows.RoutedEventArgs)">
            <summary>
            Dodaje nowego autora do listy autorów w Dziale Programowym <see cref="M:Projekt1.DzialProgramowy.ZawrzyjUmoweUOP(Projekt1.UOP)"/> i zleca mu napisanie dzieła <see cref="M:Projekt1.UOP.Zlecenie(Projekt1.Ksiazka)"/>
            </summary>
        </member>
        <member name="M:Projekt1.MainWindow.InitializeComponent">
            <summary>
            InitializeComponent
            </summary>
        </member>
        <member name="T:Projekt1.Properties.Resources">
            <summary>
              Klasa zasobu wymagająca zdefiniowania typu do wyszukiwania zlokalizowanych ciągów itd.
            </summary>
        </member>
        <member name="P:Projekt1.Properties.Resources.ResourceManager">
            <summary>
            Zwraca buforowane wystąpienie ResourceManager używane przez tę klasę.
            </summary>
        </member>
        <member name="P:Projekt1.Properties.Resources.Culture">
            <summary>
              Przesłania właściwość CurrentUICulture bieżącego wątku dla wszystkich
              przypadków przeszukiwania zasobów za pomocą tej klasy zasobów wymagającej zdefiniowania typu.
            </summary>
        </member>
    </members>
</doc>
